stages:              # these stages (jobs) form the CICD pipeline
  - mavenbuild       # Job to build the Spring Boot application
  - maventest        # Job to run tests on the Spring Boot application
  - mavendeploy      # Job to deploy the Spring Boot application to the server
  - androidbuild     # Job to build the Android application
  - androidtest      # Job to run tests for the Android application

maven-build:         
  stage: mavenbuild  # Stage for building the Spring Boot app
  tags:             
    - springboot_tag   # Runner tag for backend jobs
  script:             
    - cd Backend     # Navigate to the backend directory where the pom.xml is located
    - mvn package    # Run Maven to package the Spring Boot application
  artifacts:         
    paths:
      - Backend/target/*.jar # Path to the packaged JAR file
  only:
    refs:
      - main         # Trigger the pipeline only when changes are pushed to 'main' branch
    changes:
      - Backend/**/* # Trigger when changes are made inside the Backend folder

maven-test:          
  stage: maventest    # Stage for running tests on the Spring Boot app
  tags:             
    - springboot_tag   # Runner tag for backend jobs
  script:
    - cd Backend     # Navigate to the backend directory where the pom.xml is located
    - mvn test       # Run Maven tests
  only:
    refs:
      - main         # Trigger the pipeline only when changes are pushed to 'main' branch
    changes:
      - Backend/**/* # Trigger when changes are made inside the Backend folder

auto-deploy:         
  stage: mavendeploy  # Stage for deploying the Spring Boot app
  tags:             
    - springboot_tag   # Runner tag for backend jobs
  script:
    - cd Backend     # Navigate to the backend directory where the pom.xml is located
    - sudo mv target/*.jar /target/web-demo.jar 
    - sudo systemctl stop system-web-demo
    - sudo systemctl start system-web-demo # Restarting the service
  only:
    refs:
      - main         # Trigger the pipeline only when changes are pushed to 'main' branch
    changes:
      - Backend/**/* # Trigger when changes are made inside the Backend folder

android-build:       
  image: afirefly/android-ci:java17 # Docker image with Android environment
  stage: androidbuild  # Stage for building the Android app
  tags:                
    - main_frontend   # Runner tag for frontend jobs
  before_script:       
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/CyDine_Front/gradlew  # Make gradlew executable
  script:
    - cd Frontend      # Navigate to the frontend directory where gradlew is located
    - ./gradlew build  # Run Gradle to build the Android app
  artifacts:
    paths:
      - Frontend/CyDine_Front/build/**/*.apk
  only:
    refs:
      - main           # Trigger the pipeline only when changes are pushed to 'main' branch
    changes:
      - Frontend/**/*  # Trigger when changes are made inside the Frontend folder

android-test:        
  image: afirefly/android-ci:java17 # Docker image with Android environment
  stage: androidtest   # Stage for running tests on the Android app
  tags:                
    - main_frontend   # Runner tag for frontend jobs
  before_script:       
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - chmod +x ./Frontend/CyDine_Front/gradlew  # Make gradlew executable
  script:
    - cd Frontend      # Navigate to the frontend directory where gradlew is located
    - ./gradlew test   # Run Gradle tests for the Android app
  only:
    refs:
      - main           # Trigger the pipeline only when changes are pushed to 'main' branch
    changes:
      - Frontend/**/*  # Trigger when changes are made inside the Frontend folder